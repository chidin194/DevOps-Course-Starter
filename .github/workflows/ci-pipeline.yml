name: Continuous Integration
on: 
  push:
    paths-ignore:
      - 'README.md'
      - 'diagrams/**'
  pull_request:
    paths-ignore:
        - 'README.md'
        - 'diagrams/**'

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: docker build --target test --tag todo-app:test .
    - run: docker run todo-app:test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}

    steps:
    - uses: actions/checkout@v4
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    - run: docker build --target production --tag chiaradinansoftwire/my-todo-app:latest .
    - run: docker push chiaradinansoftwire/my-todo-app:latest
    - run: |
          sudo apt-get update && sudo apt-get install -y curl unzip
          TERRAFORM_VERSION=1.9.0
          FILENAME=terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/${FILENAME}
          unzip -o ${FILENAME} -d /usr/local/bin
          rm ${FILENAME}
    - run: terraform init
    - run: terraform apply -auto-approve
    - run: curl -dH --fail -X POST "$(terraform output -raw webhook_url)"